name: Fealty Infrastructure Deployment

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  Build:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: |
          cd app
          go build -v -o fealty

      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: fealty
          path: app/fealty

  Packer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["app", "db"]
    name: Build Infrastructure | Packer
    needs: Build
    env:
      PKR_VAR_LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
      PKR_VAR_DOMAIN: "${{ secrets.DOMAIN }}"
      DOMAIN: "${{ secrets.DOMAIN }}"

    steps:
      -  uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: deploy/packer/${{ matrix.component }}
        env:
          PACKER_CONFIG_DIR: /deploy/packer/${{ matrix.component }}

      - name: Download Binary
        uses: actions/download-artifact@v2
        with:
          name: fealty
          path: deploy/packer/app/

      - name: Build Images
        id: build_images
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: deploy/packer/${{ matrix.component }}
        env:
          PACKER_CONFIG_DIR: /deploy/packer/${{ matrix.component }}
          PACKER_LOG: 1

      - name: Upload ${{ matrix.component }} Manifest
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.component }}-manifest
          path: deploy/packer/${{ matrix.component }}-manifest.json

  Terraform:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure | Terraform
    needs: Packer
    env:
      TF_VAR_LINODE_TOKEN: "${{ secrets.LINODE_TOKEN }}"
      TF_VAR_DOMAIN: "${{ secrets.DOMAIN }}"
      AWS_ACCESS_KEY_ID: "${{ secrets.OBJECT_ACCESS_KEY }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.OBJECT_SECRET_KEY }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      - name: Download App Manifest
        uses: actions/download-artifact@v2
        with:
          name: app-manifest
          path: deploy/packer/

      - name: Download DB Manifest
        uses: actions/download-artifact@v2
        with:
          name: db-manifest
          path: deploy/packer/

      - name: Setup
        uses: hashicorp/setup-terraform@v1

      - name: Init
        id: init
        run: terraform -chdir=deploy init

      - name: Deploy
        run: terraform -chdir=deploy apply -auto-approve; terraform -chdir=deploy apply -auto-approve

      - name: Version
        uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          force-bump-patch-version: true
          changelog-generator-opt: "emojis=true"
          changelog-file: true
          allow-initial-development-versions: true
