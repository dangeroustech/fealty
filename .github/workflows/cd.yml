name: Fealty CD

on:
  pull_request:
    # types: [ closed ]
    branches: [ main ]

jobs:
  Packer:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    strategy:
      matrix:
        component: ["backend", "db"]
    name: Build Infrastructure | Packer

    steps:
      - uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: deploy/packer

      - name: Build DB
        id: build_db
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: deploy/packer/${{ matrix.component }}
        env:
          PKR_VAR_LINODE_TOKEN: ${{ secrets.PACKER_LINODE_TOKEN }}
          PACKER_LOG: 1

      - name: Upload Manifests
        uses: actions/upload-artifact@v2
        with:
          name: packer-manifests
          path: deploy/packer/*-manifest.json

  Terraform:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    name: Deploy Infrastructure | Terraform

    steps:
      - name: Checkout
        if: github.event.pull_request.merged
        uses: actions/checkout@v2

      - name: Download Packer Manifests
        uses: actions/download-artifact@v2
        with:
          working-directory: deploy/packer

      - name: Setup
        uses: hashicorp/setup-terraform@v1

      - name: Init
        id: init
        run: terraform -chdir=deploy init
        env:
          TF_VAR_LINODE_TOKEN: "${{ secrets.TERRAFORM_LINODE_TOKEN }}"
          AWS_ACCESS_KEY_ID: "${{ secrets.OBJECT_ACCESS_KEY }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.OBJECT_SECRET_KEY }}"
          TF_VAR_DOMAIN: "${{ secrets.DOMAIN }}"

      - name: Deploy
        run: terraform -chdir=deploy apply -auto-approve
        env:
          TF_VAR_LINODE_TOKEN: "${{ secrets.TERRAFORM_LINODE_TOKEN }}"
          AWS_ACCESS_KEY_ID: "${{ secrets.OBJECT_ACCESS_KEY }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.OBJECT_SECRET_KEY }}"
          TF_VAR_DOMAIN: "${{ secrets.DOMAIN }}"

      - name: Version
        uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          force-bump-patch-version: true
          changelog-generator-opt: "emojis=true"
          changelog-file: true
          allow-initial-development-versions: true
