name: Fealty CD

on:
  pull_request:
    types: [ closed ]
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  Build:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: |
          cd backend
          go build -v -o fealty

      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: fealty
          path: backend/fealty

  Packer:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    strategy:
      matrix:
        component: ["backend", "db"]
    name: Build Infrastructure | Packer
    needs: Build
    env:
      PKR_VAR_LINODE_TOKEN: ${{ secrets.PACKER_LINODE_TOKEN }}

    steps:
      -  uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: deploy/packer/${{ matrix.component }}
        env:
          PACKER_CONFIG_DIR: /deploy/packer/${{ matrix.component }}
        
      - name: WTF
        run: |
          apt-get update && apt-get install -y tree
          pwd
          echo ${{ env.GITHUB_WORKSPACE }}

      - name: Download Binary
        uses: actions/download-artifact@v2
        with:
          name: fealty
          path: deploy/packer/backend/fealty

      - name: Build Images
        id: build_images
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: deploy/packer/${{ matrix.component }}
        env:
          PACKER_CONFIG_DIR: deploy/packer/${{ matrix.component }}
          PACKER_LOG: 1

      - name: Upload Manifests
        uses: actions/upload-artifact@v2
        with:
          name: packer-manifests
          path: deploy/packer/*-manifest.json

  Terraform:
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    name: Deploy Infrastructure | Terraform
    needs: Packer
    env:
      TF_VAR_LINODE_TOKEN: "${{ secrets.TERRAFORM_LINODE_TOKEN }}"
      AWS_ACCESS_KEY_ID: "${{ secrets.OBJECT_ACCESS_KEY }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.OBJECT_SECRET_KEY }}"
      TF_VAR_DOMAIN: "${{ secrets.DOMAIN }}"

    steps:
      - name: Checkout
        # if: github.event.pull_request.merged == true
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      - name: Download Packer Manifests
        uses: actions/download-artifact@v2
        with:
          name: packer-manifests
          path: deploy/packer

      - name: Setup
        uses: hashicorp/setup-terraform@v1

      - name: Init
        id: init
        run: terraform -chdir=deploy init

      - name: Deploy
        run: terraform -chdir=deploy apply -auto-approve

      - name: Version
        uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          force-bump-patch-version: true
          changelog-generator-opt: "emojis=true"
          changelog-file: true
          allow-initial-development-versions: true
